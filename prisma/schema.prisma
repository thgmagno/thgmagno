generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Category {
  id        Int         @id @default(autoincrement())
  slug      String      @unique @db.VarChar(32)
  title     String      @unique @db.VarChar(64)
  active    Boolean     @default(true)
  Formation Formation[]

  @@map("category")
}

model Formation {
  id             Int         @id @default(autoincrement())
  institution    Institution @relation(fields: [institutionId], references: [id])
  title          String      @db.VarChar(64)
  category       Category    @relation(fields: [categoryId], references: [id])
  startedAt      DateTime    @map("started_at") @db.Date
  endedAt        DateTime?   @map("ended_at") @db.Date
  certificateUrl String?     @unique @map("certificate_url") @db.VarChar(512)
  active         Boolean     @default(true)
  institutionId  Int         @map("institution_id")
  categoryId     Int         @map("category_id")

  @@map("formation")
}

model Institution {
  id         Int         @id @default(autoincrement())
  name       String      @unique @db.VarChar(64)
  location   Location?   @relation(fields: [locationId], references: [id])
  modality   Modality
  Formation  Formation[]
  locationId Int?        @map("location_id")

  @@map("institution")
}

model Location {
  id          Int           @id @default(autoincrement())
  title       String        @unique @db.VarChar(64)
  Institution Institution[]

  @@map("location")
}

model Visit {
  id        String   @id @default(uuid())
  appName   String   @map("app_name")
  ipHash    String   @map("ip_hash")
  userAgent String?  @map("user_agent")
  city      String?
  state     String?
  country   String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()

  @@map("visit")
}

model Reaction {
  authorEmail String
  projectId   Int    @map("project_id")
  emoji       String

  @@unique([authorEmail, projectId])
  @@map("reactions")
}

model Comment {
  id          String   @id @default(uuid())
  projectId   Int      @map("project_id")
  comment     String
  authorEmail String   @map("author_email")
  authorName  String?  @map("author_name")
  avatarUrl   String?  @map("avatar_url")
  parentId    String?  @map("parent_id")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("comments")
}

enum Modality {
  ONLINE     @map("Online")
  PRESENCIAL @map("Presencial")
  HIBRIDO    @map("HÃ­brido")

  @@map("modality")
}
